{"version":3,"sources":["components/type.js","components/pokemon.js","api/fetch.js","redux/actions/create-actions.js","containers/pokemons.js","components/previousAndNextPokemon.js","components/rightContent.js","components/evolution.js","components/stats_info.js","components/leftContent.js","containers/pokemonInside.js","components/App.js","serviceWorker.js","redux/reducers/pokemonsList.js","redux/reducers/index.js","index.js"],"names":["Type","typeName","this","props","name","colors","colorType","colorFont","howColorType","react_default","a","createElement","className","style","background","color","Component","Pokemon","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pokemon","pokemonName","typesList","types","map","type","index","components_type","key","icon","item","concat","href","title","toLowerCase","Link","to","src","alt","pokemonInfo","endpoint","fetch","then","response","status","json","data","console","log","catch","err","getEvolution","url","evolutionInfo","arrayEvolution","current","push","chain","species","level","getNameEvol","info","length","_ref","evolves_to","getPokemon","pokemonsWithForms","minior","mimikyu","deoxys","wormadam","giratina","shaymin","basculin","darmanitan","tornadus","thundurus","landorus","keldeo","meloetta","meowstic","aegislash","pumpkaboo","gourgeist","oricorio","lycanroc","wishiwashi","getListAllPokemon","getPokemonsAction","getAllPokemon","payload","results","slice","_ref2","i","id","Pokemons","_this","state","step","showBtn","loadNextPokemon","bind","assertThisInitialized","allPokemons","pokemonsList","currentIndex","getNextPokemons","_this2","_this3","from","pokemonsPromises","Array","elem","Promise","all","getPokemons","pokemonsSuccessAction","_this4","loading","setState","components_pokemon","loadMoreButtonClass","loaderClass","showLoader","loadMoreButtonText","onClick","connect","_ref3","abilities","height","stats","weight","PreviousAndNextPokemon","pokemonPrevios","pokemonNext","RightContent","selectedVersionIndex","getVersionPokemon","prevProps","JSON","stringify","descriptionList","e","target","srcElement","value","version","descriptionTextRender","text","option","category","getType","ability","find","is_hidden","abilityRender","onChange","toFixed","Evolution","evolutions","keys","onlySecondLevel","filter","onlyThirdLevel","claz","evolution","Stats","getAtributes","statsInfo","base_stat","stat","reverse","infoAtribute","reduce","acum","correctValue","sumOfValue","markup","LeftContent","stats_info_Stats","PokemonInside","fetchAllData","match","params","getPokemonFromList","getDiscriptionPokemon","updatePokemon","getPokemonAction","evolutionList","pokemonsLength","prevId","nextId","_this5","getAdditionalAction","_this6","currentPokemonName","getPokemonInfoEvol","forEach","getEvolutionAction","_this7","evolutionPokemonList","previousAndNextPokemon_PreviousAndNextPokemon","leftContent_LeftContent","rightContent_RightContent","components_evolution","flavor_text_entries","flavor_text","language","genera","genus","evolution_chain","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","arguments","undefined","error","action","allPokemonsClone","assign","toConsumableArray","pokemons","newPokemon","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60e94162.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Type extends Component {\n  render () {\n    const typeName = this.props.name;\n    const colors = howColorType(typeName);\n\n    return (\n      <div className=\"type\" style={{\n        background: colors.colorType,\n        color: colors.colorFont,\n      }}>\n        <p>{typeName}</p>\n      </div>\n    );\n  }\n}\n\nfunction howColorType (typeName) {\n  if (typeName === 'fire') {\n    return {\n      colorType: '#ff912e',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'grass') {\n    return {\n      colorType: '#9bcc50',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'poison') {\n    return {\n      colorType: '#b97fc9',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'water') {\n    return {\n      colorType: '#4592c4',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'flying') {\n    return {\n      colorType: 'linear-gradient(180deg, #3dc7ef 50%, #bdb9b8 50%)',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'bug') {\n    return {\n      colorType: '#729f3f',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'normal') {\n    return {\n      colorType: '#b3babd',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'electric') {\n    return {\n      colorType: '#eed535',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'ground') {\n    return {\n      colorType: 'linear-gradient(180deg, #f7de3f 50%, #ab9842 50%)',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'fairy') {\n    return {\n      colorType: '#fdb9e9',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'fighting') {\n    return {\n      colorType: '#d56723',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'psychic') {\n    return {\n      colorType: '#f366b9',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'rock') {\n    return {\n      colorType: '#a38c21',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'steel') {\n    return {\n      colorType: '#9eb7b8',\n      colorFont: '#000',\n    };\n  }\n  if (typeName === 'ghost') {\n    return {\n      colorType: '#7b62a3',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'ice') {\n    return {\n      colorType: '#51c4e7',\n      colorFont: '#212121',\n    };\n  }\n  if (typeName === 'dragon') {\n    return {\n      colorType: 'linear-gradient(180deg, #53a4cf 50%, #f16e57 50%)',\n      colorFont: '#fff',\n    };\n  }\n  if (typeName === 'dark') {\n    return {\n      colorType: '#707070',\n      colorFont: '#fff',\n    };\n  }\n\n\n  return {\n    colorType: '#000',\n    colorFont: '#fff',\n  };\n}\n\nType.propTypes = {\n  name: PropTypes.string,\n};\n\nexport default Type;\n","import React, { Component } from 'react';\nimport '../style/main.scss';\nimport '../style/font-awesome.min.css';\nimport '../style/icon-font.css';\nimport Type from './type.js';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Pokemon extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    const pokemon = this.props.pokemon;\n    const pokemonName = this.props.pokemon.name;\n    const typesList = pokemon.types.map((type, index) => {\n      return <Type key={index} name={type.type.name} />;\n    });\n\n    let arrayIconName = [ 'Collection', 'Wishlist', 'Trade' ];\n    const icon = arrayIconName.map((item) => {\n      return (\n        <div className={`${item}`} key={item}>\n          <a href=\"#\" title={`Add to My ${item}`}>\n            <span className={`icon icon_${item.toLowerCase()}`}></span>\n          </a>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"pokemon\">\n        <Link to={`/pokemon/${pokemonName}/`}>\n          <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${pokemon.index}.png`} className=\"imgFront\" alt=\"pokemon\"></img>\n        </Link>\n\n        <div className=\"collectibles\">\n          {icon}\n        </div>\n        <p className=\"pokemon-index\">#{pokemon.index}</p>\n        <h2>{pokemon.name}</h2>\n        {typesList}\n      </div>\n    );\n  }\n}\n\nPokemon.propTypes = {\n  pokemon: PropTypes.object,\n};\n\n\nexport default Pokemon;\n","export function pokemonInfo (endpoint) {\n  return fetch(`https://pokeapi.co/api/v2${endpoint}`).then(\n    function (response) {\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' + response.status);\n\n        return;\n      }\n\n      return response.json().then(function (data) {\n        return data;\n      });\n    }\n  )\n    .catch(function (err) {\n      console.log('Fetch Error :-S', err);\n    });\n}\n\nexport function evolutionInfo (url) {\n  return fetch(url).then(\n    function (response) {\n      if (response.status !== 200) {\n        console.log('Looks like there was a problem. Status Code: ' + response.status);\n\n        return;\n      }\n\n      return response.json().then(function (data) {\n        return data;\n      });\n    }\n  )\n    .catch(function (err) {\n      console.log('Fetch Error :-S', err);\n    });\n}\n\nexport const getEvolution = (url) => {\n  return evolutionInfo(url)\n    .then(data => {\n      const arrayEvolution = [];\n      let current = 1;\n\n      const getNameEvol = (info) => {\n        if (info.length !== 0) {\n          current += 1;\n          info.map(({evolves_to, species}) => {\n            arrayEvolution.push({ name: species.name, level: `${current}` }, );\n\n            if (evolves_to.length !== 0) {\n              getNameEvol(evolves_to);\n            }\n          });\n        }\n      };\n      arrayEvolution.push({ name: data.chain.species.name, level: `${current}` }, );\n      getNameEvol(data.chain.evolves_to);\n\n      return arrayEvolution;\n    });\n};\n\nexport function getPokemonInfoEvol (data, currentPokemonName) {\n  const pokemonsPromises = Array.from(data).map((elem) => {\n    if (elem.name !== currentPokemonName) {\n      return getPokemon(elem.name);\n    }\n\n    return { name: currentPokemonName, level: elem.level };\n  });\n\n  return Promise.all(pokemonsPromises)\n    .then((pokemonsList) => {\n      return pokemonsList;\n    }\n    );\n}\n\nexport function getPokemon (name) {\n  const pokemonsWithForms = {\n    'minior': 'minior-red-meteor',\n    'mimikyu': 'mimikyu-disguised',\n    'deoxys': 'deoxys-normal',\n    'wormadam': 'wormadam-plant',\n    'giratina': 'giratina-altered',\n    'shaymin': 'shaymin-land',\n    'basculin': 'basculin-red-striped',\n    'darmanitan': 'darmanitan-standard',\n    'tornadus': 'tornadus-incarnate',\n    'thundurus': 'thundurus-incarnate',\n    'landorus': 'landorus-incarnate',\n    'keldeo': 'keldeo-ordinary',\n    'meloetta': 'meloetta-aria',\n    'meowstic': 'meowstic-male',\n    'aegislash': 'aegislash-shield',\n    'pumpkaboo': 'pumpkaboo-average',\n    'gourgeist': 'gourgeist-average',\n    'oricorio': 'oricorio-baile',\n    'lycanroc': 'lycanroc-midday',\n    'wishiwashi': 'wishiwashi-solo',\n  };\n\n  name = pokemonsWithForms[name] ? pokemonsWithForms[name] : name;\n\n  return pokemonInfo(`/pokemon/${name}/`);\n}\n\nexport function getPokemonSpeciesByName (name) {\n  return pokemonInfo(`/pokemon-species/${name}/`);\n}\nexport function getListAllPokemon () {\n  return pokemonInfo('/pokemon-species/');\n}\n\n\nexport function getPokemons (from, to) {\n  const pokemonsPromises = Array.from(new Array(to - from + 1)).map((elem, index) => getPokemon(index + from));\n\n  return Promise.all(pokemonsPromises).then(\n    (pokemonsList) => {\n      return pokemonsList;\n    }\n  );\n}\n","\nexport const getPokemonsAction = () => {\n  return {\n    type: 'GET_POKEMONS',\n  };\n};\n\nexport const getAdditionalAction = (data) => {\n  let descriptionList = data.flavor_text_entries.map(({ flavor_text, language, version }) => {\n    return {text: flavor_text, language: language.name, version: version.name };\n  });\n  let sortList = descriptionList.filter((elem) => {\n    return elem.language === 'en';\n  });\n  const newData = {\n    descriptionList: sortList,\n    category: data.genera[2].genus,\n    url: data.evolution_chain.url,\n    id: data.id,\n  };\n\n  return {\n    type: 'GET_ADDITIONAL_INFO',\n    payload: {data: newData },\n  };\n};\nexport const getEvolutionAction = (data) => {\n  const newData = data.map((item) => {\n    return {\n      name: item.name,\n      evolution: data,\n    };\n  });\n\n  return {\n    type: 'GET_EVOLUTION_INFO',\n    payload: { data: newData },\n  };\n};\nexport const getPokemonAction = (pokemon) => {\n  let index = 0;\n\n  if (pokemon.id < 10) {\n    index = '00' + pokemon.id;\n  } else {\n    index = (pokemon.id < 100) ? '0' + pokemon.id : pokemon.id;\n  }\n\n  const newData = {\n    abilities: pokemon.abilities,\n    height: pokemon.height,\n    id: pokemon.id,\n    index: index,\n    stats: pokemon.stats,\n    types: pokemon.types,\n    weight: pokemon.weight,\n  };\n\n  return {\n    type: 'GET_ADDITIONAL_INFO',\n    payload: { data: newData },\n  };\n};\nexport const getAllPokemon = (data) => {\n  const list = data.results.slice(0, 802).map(({name}, i) => {\n    let index = 0;\n\n    if (i < 10) {\n      index = '00' + (i + 1);\n    } else {\n      index = (i < 100) ? '0' + (i + 1) : (i + 1);\n    }\n\n    return {\n      id: i + 1,\n      name,\n      index: index,\n    };\n  });\n\n  return {\n    type: 'GET_ALLPOKEMON',\n    payload: {data: list },\n  };\n};\n\nexport const pokemonsSuccessAction = ({ data, to }) => {\n  const newData = data.map((item) => {\n    let index = 0;\n    if (item.id < 10) {\n      index = '00' + item.id;\n    } else {\n      index = (item.id < 100) ? '0' + item.id : item.id;\n    }\n\n    return {\n      abilities: item.abilities,\n      height: item.height,\n      id: item.id,\n      index: index,\n      name: item.name,\n      stats: item.stats,\n      types: item.types,\n      weight: item.weight,\n    };\n  });\n\n  return {\n    type: 'GET_POKEMONS_SUCCESS',\n    payload: {data: newData, to},\n  };\n};\nexport const getPokemonsErrorAction = (err) => {\n  return {\n    type: 'GET_POKEMONS_ERROR',\n    payload: err,\n  };\n};\n","import React, { Component } from 'react';\nimport Pokemon from '../components/pokemon.js';\nimport {getListAllPokemon, getPokemons } from '../api/fetch.js';\nimport '../style/main.scss';\nimport { connect } from 'react-redux';\nimport { getPokemonsAction, pokemonsSuccessAction, getAllPokemon } from '../redux/actions/create-actions';\nimport PropTypes from 'prop-types';\n\n\nclass Pokemons extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      step: 12,\n      showBtn: true,\n    };\n    this.loadNextPokemon = this.loadNextPokemon.bind(this);\n  }\n\n  componentDidMount () {\n    if (this.props.allPokemons.length === 0) {\n      this.pokemonsList();\n    }\n    if (this.props.currentIndex === 0) {\n      this.getNextPokemons();\n    }\n  }\n\n  pokemonsList () {\n    return getListAllPokemon()\n      .then( data => {\n        this.props.getAllPokemon(data);\n      });\n  }\n\n  getNextPokemons () {\n    this.props.getPokemonsAction();\n\n    const to = this.props.currentIndex + this.state.step;\n\n    return getPokemons(this.props.currentIndex + 1, to)\n      .then(pokemonsList => {\n        this.props.pokemonsSuccessAction({data: pokemonsList, to} );\n      });\n  }\n\n  loadNextPokemon () {\n    if (this.props.loading) {\n      return;\n    }\n\n    this.getNextPokemons()\n      .then(() => {\n        this.setState({\n          showBtn: true,\n        });\n      });\n  }\n\n  render () {\n    const validPokemon = this.props.allPokemons.slice(0, this.props.currentIndex);\n    const pokemon = validPokemon.map((pokemon) => {\n      return <Pokemon key={pokemon.id} pokemon={pokemon} />;\n    });\n\n    const loadMoreButtonClass = `${this.state.showBtn ? 'show' : ''}`;\n    const loaderClass = `${this.props.showLoader ? 'loader' : ''}`;\n    const loadMoreButtonText = this.props.loading ? 'Loading...' : 'Load more Pokemon';\n\n    return (\n      <div className=\"wraper\">\n\n        <div className={loaderClass}></div>\n\n        <div className=\"App\" >\n          {pokemon}\n        </div>\n        <a id=\"loadMore\" className={loadMoreButtonClass}>\n          <span onClick={this.loadNextPokemon} id=\"btnLoadNextPokemons\" className='button-lightblue'>\n            {loadMoreButtonText}\n          </span>\n        </a>\n        <span id=\"showScroll\"></span>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    const { pokemonsList } = state;\n\n    return {\n      loading: pokemonsList.loading,\n      showLoader: pokemonsList.showLoader,\n      currentIndex: pokemonsList.currentIndex,\n      allPokemons: pokemonsList.allPokemons,\n    };\n  },\n  { getPokemonsAction, pokemonsSuccessAction, getAllPokemon }\n)(Pokemons);\n\nPokemons.propTypes = {\n  allPokemons: PropTypes.array,\n  currentIndex: PropTypes.number,\n  loading: PropTypes.bool,\n  showLoader: PropTypes.bool,\n  getAllPokemon: PropTypes.func,\n  getPokemonsAction: PropTypes.func,\n  pokemonsSuccessAction: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport '../style/previousAndNextPokemon.scss';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport default class PreviousAndNextPokemon extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    return (\n      <div className=\"header\">\n        <div className=\"pokedex-pokemon-pagination\">\n\n          <Link to={`/pokemon/${this.props.pokemonPrevios.name}/`} className=\"previous\">\n            <div className=\"pokedex-pokemon-pagination-wrapper\">\n              <span className=\"icon icon_arrow_sm_left\"></span>\n              <span className=\"pokemon-number\">#{this.props.pokemonPrevios.index} </span>\n              <span className=\"pokemon-name\" id=\"pokemon-name\">{this.props.pokemonPrevios.name}</span>\n            </div>\n          </Link>\n          <Link to={`/pokemon/${this.props.pokemonNext.name}/`} className=\"next\">\n            <div className=\"pokedex-pokemon-pagination-wrapper\">\n              <span className=\"icon icon_arrow_sm_right\"></span>\n              <span className=\"pokemon-number\">#{this.props.pokemonNext.index} </span>\n              <span className=\"pokemon-name\" id=\"pokemon-name\">{this.props.pokemonNext.name}</span>\n            </div>\n          </Link>\n        </div>\n\n        <div className=\"pokedex-pokemon-pagination-title\">\n          <div className=\"title-text\">\n            <span>{this.props.pokemon.name}</span>\n            <span>#{this.props.pokemon.index}</span>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nPreviousAndNextPokemon.propTypes = {\n  pokemon: PropTypes.object,\n  pokemonPrevios: PropTypes.object,\n  pokemonNext: PropTypes.object,\n};\n","import React, { Component } from 'react';\nimport '../style/rightContent.scss';\nimport Type from './type.js';\nimport PropTypes from 'prop-types';\n\nexport default class RightContent extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      selectedVersionIndex: 0,\n    };\n    this.getVersionPokemon = this.getVersionPokemon.bind(this);\n  }\n\n  componentDidUpdate (prevProps) {\n    if (JSON.stringify(prevProps.pokemon.descriptionList) !== JSON.stringify(this.props.pokemon.descriptionList)) {\n      this.setState({\n        selectedVersionIndex: 0,\n      });\n    }\n  }\n\n  getVersionPokemon (e) {\n    if (!e) return;\n\n    const target = e.target || e.srcElement;\n\n    this.setState({\n      selectedVersionIndex: target.value,\n    });\n  }\n\n  getType (types) {\n    const typesList = types.map((type, index) => {\n      return <Type key={index} name={type.type.name} />;\n    });\n\n    return typesList;\n  }\n\n  render () {\n    const version = this.props.pokemon.descriptionList\n      ? this.props.pokemon.descriptionList.map((elem, index) => {\n        return <option key={index} value={index}>{elem.version}</option>;\n      })\n      : [];\n\n    const descriptionTextRender = this.props.pokemon.descriptionList\n      ? <span>{this.props.pokemon.descriptionList[this.state.selectedVersionIndex].text}</span>\n      : <span>loading ...</span>;\n\n    let option = {\n      weight: this.props.pokemon.weight,\n      height: this.props.pokemon.height,\n      category: this.props.pokemon.category,\n      type: this.getType(this.props.pokemon.types),\n    };\n\n    const ability = this.props.pokemon.abilities.find(({ is_hidden }) => !is_hidden);\n    const abilityRender = ability\n      ? <li>\n        <span className=\"atribute-title\">Abilities</span>\n        <span className=\"atribute-value\">{ability.ability.name}</span>\n      </li>\n      : <li></li>;\n\n\n    return (\n      <div className=\"right-content\">\n        <div className=\"discription\">\n          {descriptionTextRender}\n          <div className=\"versions-menu\">\n            <span>Version: </span>\n            <select onChange={this.getVersionPokemon} name=\"selectBtn1\" id=\"selectBtn1\">\n              {version}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"version\">\n        </div>\n        <div className=\"pokemon-ability-info\">\n          <div className=\"ability-info-left\">\n            <ul>\n              <li>\n                <span className=\"atribute-title\">Height</span>\n                <span className=\"atribute-value\">\n                  {option.height}{`'`}\n                </span>\n              </li>\n              <li>\n                <span className=\"atribute-title\">Weight</span>\n                <span className=\"atribute-value\">{((option.weight / 10) * 2.2046).toFixed(1)} lbs</span>\n              </li>\n              <li>\n                <span className=\"atribute-title\">Gender</span>\n                <span className=\"atribute-value\">\n                  <i className=\"icon icon_male_symbol\"></i>\n                  <i className=\"icon icon_female_symbol\"></i>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div className=\"ability-info-right\">\n            <ul>\n              <li>\n                <span className=\"atribute-title\">Category</span>\n                <span className=\"atribute-value\">{option.category}</span>\n              </li>\n              {abilityRender}\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"pokemon-type-info\">\n          <div className=\"type-list\">\n            <div className=\"type-text\">\n              <h3>Type</h3>\n            </div>\n            {option.type}\n          </div>\n          {/* <div className=\"weaknesses\">\n            <div className=\"weaknesses-text\">\n              <h3>Weaknesses</h3>\n            </div>\n            {this.state.type}\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nRightContent.propTypes = {\n  pokemon: PropTypes.object,\n};\n","import Type from './type.js';\nimport React, { Component } from 'react';\nimport '../style/evolution.scss';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getPokemonsAction } from '../redux/actions/create-actions';\nimport PropTypes from 'prop-types';\n\nclass Evolution extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      level: {},\n    };\n  }\n\n  getType (types) {\n    const typesList = types.map((type, index) => {\n      return <Type key={index} name={type.type.name} />;\n    });\n\n    return typesList;\n  }\n  render () {\n    console.log(this.props.evolutions);\n    if (!this.props.evolutions || Object.keys(this.props.evolutions).length === 0) return <div>Loading ...</div>;\n\n    let onlySecondLevel = this.props.evolutions.filter(({level}) => {\n      return level === '2';\n    });\n    let onlyThirdLevel = this.props.evolutions.filter(({level}) => {\n      return level === '3';\n    });\n\n    let claz = '';\n\n    if (this.props.evolutions.length === 1) {\n      claz = 'onePokemon homeless';\n    }\n    else if (onlySecondLevel.length === 1 && onlyThirdLevel.length === 0) {\n      claz = 'onlyTwoPokemon';\n    }\n    else if (onlySecondLevel.length > 2 && onlyThirdLevel.length === 0) {\n      claz = 'eevee blok';\n    }\n    else if (onlySecondLevel.length === 2) {\n      claz = 'onlyTwoLevel2';\n    }\n    else {\n      claz = 'threeEvol';\n    }\n\n    const evolutions = this.props.evolutions.map((evolution) => {\n      const pokemon = this.props.allPokemons.find(({name}) => name === evolution.name);\n\n      return (\n        <div className={claz} key={pokemon.id}>\n          {this.props.evolutions.length === 1 ? <p>This Pokémon does not evolve.</p> : ''}\n          <div className={'level' + evolution.level}>\n            <Link to={`/pokemon/${pokemon.name}/`}>\n              <div>\n                <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${pokemon.index}.png`} className=\"imgFooter\" alt=\"pokemon\"></img>\n                <h3>{pokemon.name}<span> #{pokemon.index}</span></h3>\n                {this.getType(pokemon.types)}\n              </div>\n            </Link>\n            <ul>\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"pokemon-evolution\">\n        <h2>Evolutions</h2>\n        <div className=\"evolution-profile\">\n          {evolutions}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    const { pokemonsList } = state;\n\n    return {\n      allPokemons: pokemonsList.allPokemons,\n    };\n  },\n  {getPokemonsAction }\n)(Evolution);\n\nEvolution.propTypes = {\n  allPokemons: PropTypes.array,\n  evolutions: PropTypes.array,\n};\n","import React, { Component } from 'react';\nimport '../style/stats.scss';\nimport PropTypes from 'prop-types';\n\nexport default class Stats extends Component {\n  constructor (props) {\n    super(props);\n\n    this.state = { stats: this.getAtributes() };\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.statsInfo !== this.props.statsInfo) {\n      this.setState({\n        stats: this.getAtributes(),\n      });\n    }\n  }\n\n  getAtributes () {\n    let atribValue = this.props.statsInfo.map(({ base_stat, stat }) => {\n      return {key: stat.name, value: base_stat};\n    });\n\n    return atribValue.reverse();\n  }\n\n  render () {\n    const infoAtribute = this.state.stats.reduce((acum, {key, value}) => {\n      const max = 200;\n      const correctValue = 100 - value * 100 / max;\n      acum.sumOfValue += value;\n\n      acum.markup.push( <div key={key} className=\"first\">\n        <div className=\"inside\">\n          <div className=\"inside-white\" style={{height: `${correctValue}%`}}></div>\n        </div>\n        <span>{key}</span>\n      </div>);\n\n      return acum;\n    }, { sumOfValue: 0, markup: [] });\n\n    return (\n      <div key={this.props.stats} className=\"pokemon-stats-info\">\n        <span className=\"sumAtribute\">Sum of all attributes : {this.props.statsInfo.length ? (infoAtribute.sumOfValue / this.props.statsInfo.length).toFixed(0) : 0}</span>\n        {infoAtribute.markup}\n      </div>\n    );\n  }\n}\n\nStats.propTypes = {\n  statsInfo: PropTypes.array,\n  stats: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport '../style/leftContent.scss';\nimport Stats from './stats_info.js';\nimport PropTypes from 'prop-types';\n\nexport default class LeftContent extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    let arrayIconName = [ 'Collection', 'Wishlist', 'Trade', 'Add' ];\n    const icon = arrayIconName.map((item, index) => {\n      return (\n        <div className={`collectibles-${item}`} key={index}>\n          <a href=\"#\" title={`Add to My ${item}`}>\n            <span className={`icon icon_${item.toLowerCase()}`}></span>\n          </a>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"left-content\">\n        <div className=\"avatar\">\n          <img src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${this.props.index}.png`} className=\"imgFront\" alt=\"pokemon\"></img>\n        </div>\n\n        <div className=\"collectibles-wrapper\">\n          {icon}\n        </div>\n        <Stats statsInfo={this.props.statsInfo} />\n      </div>\n\n    );\n  }\n}\n\nLeftContent.propTypes = {\n  index : PropTypes.string,\n  statsInfo: PropTypes.array,\n};\n","import React, { Component } from 'react';\nimport '../style/insidePokemon.scss';\nimport Type from '../components/type.js';\nimport {getPokemon, getListAllPokemon, getPokemonSpeciesByName, getEvolution, getPokemonInfoEvol } from '../api/fetch.js';\nimport PreviousAndNextPokemon from '../components/previousAndNextPokemon.js';\nimport RightContent from '../components/rightContent.js';\nimport Evolution from '../components/evolution.js';\nimport LeftContent from '../components/leftContent.js';\nimport { connect } from 'react-redux';\nimport { getPokemonAction, getAdditionalAction, getAllPokemon, getEvolutionAction } from '../redux/actions/create-actions';\nimport PropTypes from 'prop-types';\n\nclass PokemonInside extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pokemon: {},\n      pokemonPrevios: {},\n      pokemonNext: {},\n    };\n  }\n\n  componentDidMount () {\n    if (this.props.allPokemons.length === 0) {\n      getListAllPokemon()\n        .then( data => {\n          this.props.getAllPokemon(data);\n          this.fetchAllData();\n        });\n    }\n\n    if (this.props.currentIndex !== 0) {\n      this.fetchAllData();\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.match.params.name !== this.props.match.params.name) {\n      this.fetchAllData();\n    }\n  }\n\n  fetchAllData () {\n    const pokemon = this.getPokemonFromList();\n\n    if (pokemon) {\n      if (!pokemon.descriptionList) {\n        this.getDiscriptionPokemon().then((data) => {\n          if (!pokemon.evolution) {\n            this.evolution(data);\n            this.updatePokemon(pokemon);\n          }\n        });\n      }\n\n      this.updatePokemon(pokemon);\n    }\n    else {\n      getPokemon(this.props.match.params.name)\n        .then(data => {\n          this.props.getPokemonAction(data);\n          this.getDiscriptionPokemon().then((data) => {\n            this.evolution(data);\n\n            const pokemon = this.getPokemonFromList();\n            this.updatePokemon(pokemon);\n          });\n\n          return data.id;\n        });\n    }\n  }\n\n  getPokemonFromList () {\n    return this.props.allPokemons.find(({ id, stats, name }) => stats && (name === this.props.match.params.name || id === +this.props.match.params.name));\n  }\n\n  updateStateEvolution (pokemon) {\n    this.setState({\n      evolution: pokemon.evolution,\n      evolutionList: pokemon.evolutionList,\n    });\n  }\n\n  updateStateDescription (data) {\n    this.setState({\n      descriptionList: data.descriptionList,\n      category: data.category,\n    });\n  }\n\n  updatePokemon (pokemon) {\n    const pokemonsLength = this.props.allPokemons.length;\n    const prevId = pokemon.id < 2 ? pokemonsLength - 1 : pokemon.id - 2;\n    const nextId = pokemon.id >= pokemonsLength ? 0 : pokemon.id;\n\n    this.setState({\n      pokemon: pokemon,\n      pokemonPrevios: this.props.allPokemons[prevId],\n      pokemonNext: this.props.allPokemons[nextId],\n    });\n  }\n\n  getDiscriptionPokemon () {\n    return getPokemonSpeciesByName(this.props.match.params.name)\n      .then(data => {\n        return this.props.getAdditionalAction(data).payload.data;\n      });\n  }\n\n  evolutionPokemonList (data) {\n    return getPokemonInfoEvol(data, this.props.match.params.name)\n      .then(pokemonsList => {\n        pokemonsList.forEach(pokemon => {\n          if (pokemon.id >= 0) {\n            this.props.getPokemonAction(pokemon);\n          }\n        });\n        this.props.getEvolutionAction(data);\n        this.setState({\n          evolution: data,\n          evolutionList: pokemonsList.map(pokemon => {\n            if (pokemon.id >= 0) {\n              return pokemon;\n            }\n\n            return this.props.allPokemons.find(({ id, name }) => id >= 0 && name === this.props.match.params.name);\n          }),\n        });\n\n        return;\n      });\n  }\n\n  evolution (elem) {\n    return getEvolution(elem.url)\n      .then(data => {\n        this.evolutionPokemonList(data);\n      });\n  }\n\n  getOptions (data) {\n    let weight = ((data.weight / 10) * 2.2046).toFixed(1);\n    let abilities = data.abilities.map((elem) => {\n      return elem.ability.name;\n    });\n\n    return {\n      weight: weight,\n      abilities: abilities[0],\n    };\n  }\n\n  getType (data) {\n    const typesList = data.types.map((type, index) => {\n      return <Type key={index} name={type.type.name} />;\n    });\n\n    return typesList;\n  }\n\n  render () {\n    if (Object.keys(this.state.pokemon).length === 0) return <div className=\"loader\"></div>;\n\n    return (\n      <div className=\"wraper\">\n        <div className=\"container pokedex\">\n\n          <PreviousAndNextPokemon\n            pokemon={this.state.pokemon}\n            pokemonPrevios={this.state.pokemonPrevios}\n            pokemonNext={this.state.pokemonNext}\n          />\n\n          <div className=\"section pokedex-pokemon-details\">\n            <LeftContent index={this.state.pokemon.index} statsInfo={this.state.pokemon.stats}/>\n            <RightContent pokemon={this.state.pokemon} />\n          </div>\n\n          <Evolution evolutions={ this.state.pokemon.evolution } />\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => {\n    const { pokemonsList } = state;\n\n    return {\n      allPokemons: pokemonsList.allPokemons,\n      currentIndex: pokemonsList.currentIndex,\n      showLoader: pokemonsList.showLoader,\n    };\n  },\n  { getAdditionalAction, getAllPokemon, getEvolutionAction, getPokemonAction }\n)(PokemonInside);\n\nPokemonInside.propTypes = {\n  allPokemons: PropTypes.array,\n  getPokemonAction: PropTypes.func,\n  getAllPokemon: PropTypes.func,\n  getEvolutionAction: PropTypes.func,\n  getAdditionalAction: PropTypes.func,\n  currentIndex: PropTypes.number,\n  match: PropTypes.object,\n};\n","import React, { Component } from 'react';\nimport Pokemons from '../containers/pokemons.js';\nimport PokemonInside from '../containers/pokemonInside.js';\nimport '../style/main.scss';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  constructor () {\n    super();\n  }\n\n  render () {\n    return (\n      <BrowserRouter>\n        <div>\n          <Link to=\"/pokemons/\">Home</Link>\n          <hr />\n          <Route exact path=\"/pokemons\" component={Pokemons} />\n          <Route path=\"/pokemon/:name\" component={PokemonInside} />\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const getInitialState = () => {\n  return {loading: false, showLoader: true, currentIndex: 0, error: null, allPokemons: []};\n};\n\nconst pokemonsList = (state = getInitialState(), action) => {\n  const allPokemonsClone = state.allPokemons.slice(0);\n\n  switch (action.type) {\n  case 'GET_POKEMONS':\n    return Object.assign({}, state, {loading: true, showLoader: true});\n\n  case 'GET_POKEMONS_SUCCESS':\n    action.payload.data.forEach((pokemon) => {\n      updatePokemon(allPokemonsClone, pokemon);\n    });\n\n    return Object.assign({}, state, {\n      currentIndex: action.payload.to,\n      loading: false,\n      allPokemons: allPokemonsClone,\n      showLoader: false,\n    });\n\n  case 'GET_POKEMONS_ERROR':\n    return Object.assign({}, state, {\n      error: action.payload,\n      loading: false,\n    });\n\n  case 'GET_ADDITIONAL_INFO':\n    updatePokemon(allPokemonsClone, action.payload.data);\n\n    return Object.assign({}, state, {\n      allPokemons: allPokemonsClone,\n      showLoader: false,\n    });\n  case 'GET_EVOLUTION_INFO':\n    action.payload.data.forEach((pokemon) => {\n      updatePokemon(allPokemonsClone, pokemon);\n    });\n\n    return Object.assign({}, state, {\n      allPokemons: allPokemonsClone,\n    });\n\n  case 'GET_ALLPOKEMON':\n    return Object.assign({}, state, {\n      allPokemons: [\n        ...state.allPokemons,\n        ...action.payload.data,\n      ],\n    });\n\n  default:\n    return state;\n  }\n};\n\nexport default pokemonsList;\n\nconst updatePokemon = (pokemons, newPokemon) => {\n  const pokemon = pokemons.find(({ id, name }) => id === newPokemon.id || name === newPokemon.name);\n  if (pokemon) {\n    Object.assign(pokemon, newPokemon);\n  }\n\n  return pokemons;\n};\n","import { combineReducers } from 'redux';\nimport pokemonsList from './pokemonsList';\n// import {GetPokemons, GetPokemon} from '../get-pokemons.js';\n\nconst allReducers = combineReducers({\n  pokemonsList,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport allReducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// import { Router, Route, IndexRoute, browserHistory } from 'react-router'\n//\n// render(\n//   <Router history={browserHistory}>\n//     <Route path='/' component={App}>\n//       <IndexRoute component={Home} />\n//       <Route path='admin' component={Admin} />\n//       <Route path='genre' component={Genre} />\n//     </Route>\n//   </Router>,\n//   document.getElementById('root')\n// )\n"],"sourceRoot":""}